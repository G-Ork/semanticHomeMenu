uid: semanticHomeMenu_Security
tags: []
props:
  parameters:
    - context: item
      description: Security Group Item
      label: Security Group
      name: securityGroup
      required: true
      type: TEXT
timestamp: Aug 5, 2023, 10:06:34 PM
component: f7-card
config:
  style:
    --f7-card-header-border-color: transparent
    background: =(themeOptions.dark=="light") ? ("white"):("black")
    border-radius: 10px
    margin-left: 5px
    margin-right: 5px
slots:
  default:
    - component: f7-card-content
      config:
        style:
          height: auto
      slots:
        default:
          - component: f7-row
            config:
              style:
                justify-content: space-between
            slots:
              default:
                - component: f7-col
                  config:
                    style:
                      text-align: center
                  slots:
                    default:
                      - component: oh-button
                        config:
                          action: popup
                          actionModal: widget:semanticHomeMenu_Security_Keypad
                          actionModalConfig:
                            securityGroup: =props.securityGroup
                            targetMode: armed-home
                          class:
                            - padding-top-half
                            - display-flex
                            - flex-direction-column
                          fill: '=vars.objVar.selectThing=="Security" ? true : false'
                          icon-f7: checkmark_shield_fill
                          iconColor: '=items[props.securityGroup+"_mode"].state != "armed-home"  ? "gray" : "red"'
                          iconSize: 60
                          style:
                            --f7-button-bg-color: transparent
                            --f7-button-hover-bg-color: '=vars.objVar.selectThing=="Security" ? "F8BB00" : "transparent"'
                            --f7-button-padding-horizontal: 0px
                            --f7-button-padding-vertical: 0px
                            --f7-button-text-color: 'themeOptions.dark=="light" ? white : black'
                            font-size: 14px
                            height: auto
                          text: ARMED HOME
                - component: f7-col
                  config:
                    style:
                      text-align: center
                  slots:
                    default:
                      - component: oh-button
                        config:
                          action: popup
                          actionModal: widget:semanticHomeMenu_Security_Keypad
                          actionModalConfig:
                            securityGroup: =props.securityGroup
                            targetMode: disarmed
                          class:
                            - padding-top-half
                            - display-flex
                            - flex-direction-column
                          fill: '=vars.objVar.selectThing=="Security" ? true : false'
                          icon-f7: checkmark_shield_fill
                          iconColor: '=items[props.securityGroup+"_mode"].state != "disarmed"  ? "gray" : "green"'
                          iconSize: 60
                          style:
                            --f7-button-bg-color: transparent
                            --f7-button-hover-bg-color: '=vars.objVar.selectThing=="Security" ? "F8BB00" : "transparent"'
                            --f7-button-padding-horizontal: 0px
                            --f7-button-padding-vertical: 0px
                            --f7-button-text-color: 'themeOptions.dark=="light" ? white : black'
                            font-size: 14px
                            height: auto
                          text: DISARMED
                - component: f7-col
                  config:
                    style:
                      text-align: center
                  slots:
                    default:
                      - component: oh-button
                        config:
                          action: popup
                          actionModal: widget:semanticHomeMenu_Security_Keypad
                          actionModalConfig:
                            securityGroup: =props.securityGroup
                            targetMode: armed-away
                          class:
                            - padding-top-half
                            - display-flex
                            - flex-direction-column
                          fill: '=vars.objVar.selectThing=="Security" ? true : false'
                          icon-f7: checkmark_shield_fill
                          iconColor: '=items[props.securityGroup+"_mode"].state != "armed-away"  ? "gray" : "red"'
                          iconSize: 60
                          style:
                            --f7-button-bg-color: transparent
                            --f7-button-hover-bg-color: '=vars.objVar.selectThing=="Security" ? "F8BB00" : "transparent"'
                            --f7-button-padding-horizontal: 0px
                            --f7-button-padding-vertical: 0px
                            --f7-button-text-color: 'themeOptions.dark=="light" ? white : black'
                            font-size: 14px
                            height: auto
                          text: ARMED AWAY
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: '=items.gSmokeAlarm.state == "0" ? "iconify:material-symbols:detector-smoke" : "iconify:material-symbols:detector-alarm"'
                    iconColor: '=items.gSmokeAlarm.state == "0" ? "gray" : "red"'
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Smoke Sensors
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                for: smokeSensorMember
                                fragment: true
                                sourceType: itemsInGroup
                                groupItem: gSmokeAlarm
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.smokeSensorMember.metadata.uiSemantics.config.preposition + loop.smokeSensorMember.metadata.uiSemantics.config.location
                                      icon: '=items[loop.smokeSensorMember.name].state != "OFF" ? "iconify:material-symbols:detector-alarm" : "iconify:material-symbols:detector-smoke"'
                                      iconColor: '=items[loop.smokeSensorMember.name].state != "OFF" ? "red" : "gray"'
                                      item: =loop.smokeSensorMember.name
                                      title: =loop.smokeSensorMember.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.smokeSensorMember.name].state != "OFF" ? "ALARM" : "OK"'
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: material:roller_shades
                    iconColor: gray
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Blinds
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                filter: '((loop.shadesMember.category == "rollershutter") || ((loop.shadesMember.category).includes("Rollershutter"))) ? true : false'
                                for: shadesMember
                                fragment: true
                                itemTags: Opening
                                sourceType: itemsWithTags
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.shadesMember.metadata.uiSemantics.config.preposition + loop.shadesMember.metadata.uiSemantics.config.location
                                      icon: '=(loop.shadesMember.state == "0") ? "material:roller_shades" : "material:roller_shades"'
                                      iconColor: gray
                                      item: =loop.shadesMember.name
                                      title: =loop.shadesMember.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.shadesMember.name].state != "100" ? "OPEN" : "CLOSED"'
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: material:sensor_door
                    iconColor: '=items.gDoorsOpen.state == "0" ? "gray" : "red"'
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Door Sensors
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                for: doorMember
                                fragment: true
                                sourceType: itemsInGroup
                                groupItem: gDoorsOpen
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.doorMember.metadata.uiSemantics.config.preposition + loop.doorMember.metadata.uiSemantics.config.location
                                      icon: material:sensor_door
                                      iconColor: '=items[loop.doorMember.name].state != "CLOSED" ? "red" : "gray"'
                                      item: =loop.doorMember.name
                                      title: =loop.doorMember.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.doorMember.name].state != "CLOSED" ? "OPEN" : "CLOSED"'
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: material:sensor_window
                    iconColor: '=items.gWindowsOpen.state == "0" ? "gray" : "red"'
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Window Sensors
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                for: windowMember
                                fragment: true
                                sourceType: itemsInGroup
                                groupItem: gWindowsOpen
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.windowMember.metadata.uiSemantics.config.preposition + loop.windowMember.metadata.uiSemantics.config.location
                                      icon: material:sensor_window
                                      iconColor: '=items[loop.windowMember.name].state != "CLOSED" ? "red" : "gray"'
                                      item: =loop.windowMember.name
                                      title: =loop.windowMember.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.windowMember.name].state != "CLOSED" ? "OPEN" : "CLOSED"'
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: '=items.gMotionDetected.state == "0" ? "motion-closed" : "motion-open"'
                    iconColor: '=items.gMotionDetected.state == "0" ? "gray" : "red"'
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Motion Sensors
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                filter: '(loop.motionDetector.category=="motion") ? true : false'
                                for: motionDetector
                                fragment: true
                                sourceType: itemsInGroup
                                groupItem: gMotionDetected
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.motionDetector.metadata.uiSemantics.config.preposition + loop.motionDetector.metadata.uiSemantics.config.location
                                      icon: '=items[loop.motionDetector.name].state == "ON" ? "motion-open" : "motion-closed"'
                                      iconColor: '=items[loop.motionDetector.name].state != "ON" ? "red" : "gray"'
                                      item: =loop.motionDetector.name
                                      title: =loop.motionDetector.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.motionDetector.name].state != "ON" ? "NO-Motion" : "MOTION"'
          - component: f7-list
            config:
              accordionList: true
              mediaList: true
            slots:
              default:
                - component: oh-list-item
                  config:
                    icon: material:video_camera_front
                    iconColor: gray
                    style:
                      margin-top: 30px
                      --f7-list-item-after-font-size: 16px
                      --f7-list-item-after-text-color: "=themeOptions.dark === 'dark' ? 'rgb(180,180,180)' : 'rgb(80,80,80)'"
                    title: Surveillance
                  slots:
                    accordion:
                      - component: f7-list
                        config:
                          mediaList: true
                          style:
                            background-color: transparent
                        slots:
                          default:
                            - component: oh-repeater
                              config:
                                cacheSource: true
                                accordionList: true
                                fetchMetadata: semantics,widgetOrder,uiSemantics
                                filter: '(loop.surveilance.category=="switch") || (loop.surveilance.category=="Switch") ? true : false'
                                for: surveilance
                                fragment: true
                                itemTags: Camera
                                sourceType: itemsWithTags
                              slots:
                                default:
                                  - component: oh-list-item
                                    config:
                                      footer: =loop.surveilance.metadata.uiSemantics.config.preposition + loop.surveilance.metadata.uiSemantics.config.location
                                      icon: material:video_camera_front
                                      iconColor: '=items[loop.surveilance.name].state != "ON" ? "gray" : "red"'
                                      item: =loop.surveilance.name
                                      title: =loop.surveilance.metadata.uiSemantics.config.equipment
                                      after: '=items[loop.surveilance.name].state != "ON" ? "OFF" : "ON"'
